class ReactablesComponent{constructor(el){this.el=el,this.id=this.el.getAttribute("r-id"),this.checksum=this.el.getAttribute("r-checksum"),this.data=JSON.parse(this.el.getAttribute("r-data")),this.toggle_loads(),this.remove_attrs(),this.bind(!0)}toggle_loads(ready=!0){ready?(this.el.querySelectorAll("[r-loading]").forEach(el=>{let attr=el.getAttribute("r-loading");el.style.display=attr.length?attr:"none"}),this.el.querySelectorAll("[r-ready]").forEach(el=>{let attr=el.getAttribute("r-ready");el.style.display=attr.length?attr:"inline-block"}),this.el.querySelectorAll("[r-loading-class]").forEach(el=>{el.classList.remove(el.getAttribute("r-loading-class"))}),this.el.querySelectorAll("[r-ready-class]").forEach(el=>{el.classList.add(el.getAttribute("r-ready-class"))})):(this.el.querySelectorAll("[r-loading]").forEach(el=>{let attr=el.getAttribute("r-loading");el.style.display=attr.length?attr:"inline-block"}),this.el.querySelectorAll("[r-ready]").forEach(el=>{let attr=el.getAttribute("r-ready");el.style.display=attr.length?attr:"none"}),this.el.querySelectorAll("[r-loading-class]").forEach(el=>{el.classList.add(el.getAttribute("r-loading-class"))}),this.el.querySelectorAll("[r-ready-class]").forEach(el=>{el.classList.remove(el.getAttribute("r-ready-class"))}))}remove_attrs(){this.el.removeAttribute("r-data"),this.el.removeAttribute("r-id"),this.el.removeAttribute("r-checksum")}bind(listen=!1){this.bind_models(listen),this.bind_events(listen)}bind_models(listen=!1){this.el.querySelectorAll("input[type=text][r-model], input[type=date][r-model], input[type=datetime-local][r-model], input[type=email][r-model], input[type=number][r-model], input[type=month][r-model], input[type=password][r-model], input[type=search][r-model], input[type=range][r-model], input[type=search][r-model], input[type=tel][r-model], input[type=time][r-model], input[type=url][r-model], input[type=color][r-model], input[type=week][r-model], textarea[r-model]").forEach(model=>{let name=model.getAttribute("r-model"),lazy=model.hasAttribute("r-lazy"),debounce=model.getAttribute("r-debounce"),debounceTimeout=null,value=this.data[name];void 0!==value&&(model.value=value),listen&&model.addEventListener("input",()=>{this.data[name]=model.value,lazy||(debounce?(debounceTimeout&&clearTimeout(debounceTimeout),debounceTimeout=setTimeout(()=>{this.refresh()},debounce)):this.refresh())}),model.removeAttribute("r-model"),model.removeAttribute("r-lazy"),model.removeAttribute("r-debounce")}),this.el.querySelectorAll("input[type=checkbox][r-model], input[type=radio][r-model]").forEach(model=>{let name=model.getAttribute("r-model"),lazy=model.hasAttribute("r-lazy"),debounce=model.getAttribute("r-debounce"),debounceTimeout=null,qualifiedName=name.replace("[]",""),custom=model.getAttribute("r-value"),value=this.data[qualifiedName];name.endsWith("[]")?Array.isArray(value)&&custom&&value.includes(custom)&&(model.checked=!0):void 0!==value&&(custom?value==custom&&(model.checked=!0):model.checked=value),listen&&model.addEventListener("input",()=>{if(name.endsWith("[]")){if(Array.isArray(this.data[qualifiedName])||(this.data[qualifiedName]=[]),custom)if(model.checked)this.data[qualifiedName].push(custom);else{let idx=this.data[qualifiedName].indexOf(custom);-1!==idx&&this.data[qualifiedName].splice(idx,1)}}else this.data[name]=custom?!!model.checked&&custom:model.checked;lazy||(debounce?(debounceTimeout&&clearTimeout(debounceTimeout),debounceTimeout=setTimeout(()=>{this.refresh()},debounce)):this.refresh())}),model.removeAttribute("r-model"),model.removeAttribute("r-lazy"),model.removeAttribute("r-debounce"),model.removeAttribute("r-value")})}bind_events(listen=!1){this.el.querySelectorAll("[r-click]").forEach(el=>{let value=el.getAttribute("r-click");listen&&el.addEventListener("click",()=>{this.refresh("method",value)}),el.removeAttribute("r-click")})}refresh(type="model",extra=null){this.toggle_loads(!1),$.post("reactables/component",JSON.stringify({id:this.id,checksum:this.checksum,type:type,data:this.data,extra:extra}),response=>{morphdom(this.el,response.html),this.data=JSON.parse(this.el.getAttribute("r-data")),this.toggle_loads(),this.remove_attrs(),this.bind()}).fail(error=>{this.el.innerHTML=error.responseText})}}class Reactables{components=[];init(){document.querySelectorAll("[r-id]").forEach(el=>{this.components.push(new ReactablesComponent(el))})}}document.addEventListener("DOMContentLoaded",()=>{window.reactables=new Reactables,window.reactables.init()});